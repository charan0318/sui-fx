{
  "name": "sui-fx",
  "version": "1.0.0",
  "description": "ğŸŒŠ SUI-FX - Production-ready Sui testnet faucet with zero downtime, professional UX, and enterprise-grade developer tools",
  "homepage": "https://github.com/charan0318/sui-fx",
  "repository": {
    "type": "git",
    "url": "https://github.com/charan0318/sui-fx.git"
  },
  "bugs": {
    "url": "https://github.com/charan0318/sui-fx/issues"
  },
  "license": "MIT",
  "author": {
    "name": "SUI-FX Contributors",
    "url": "https://github.com/charan0318/sui-fx/graphs/contributors"
  },
  "keywords": [
    "sui",
    "blockchain",
    "testnet",
    "faucet",
    "web3",
    "cryptocurrency",
    "discord-bot",
    "api",
    "zero-downtime",
    "sqlite",
    "typescript",
    "react",
    "nodejs",
    "enterprise",
    "production-ready"
  ],
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "dev": "concurrently \"npm run backend:dev\" \"npm run frontend:dev\" --names \"backend,frontend\" --prefix-colors \"blue,green\"",
    "start": "concurrently \"npm run backend:start\" \"npm run frontend:start\" --names \"backend,frontend\" --prefix-colors \"blue,green\"",
    "build": "npm run backend:build && npm run frontend:build",
    "test": "npm run backend:test && npm run frontend:test",
    "lint": "npm run backend:lint && npm run frontend:lint",
    "clean": "npm run backend:clean && npm run frontend:clean && rm -rf node_modules",
    "setup": "npm install && npm run backend:setup && npm run frontend:setup",
    "backend:dev": "cd packages/backend && npm run dev",
    "backend:start": "cd packages/backend && npm run start",
    "backend:build": "cd packages/backend && npm run build",
    "backend:test": "cd packages/backend && npm run test",
    "backend:lint": "cd packages/backend && npm run lint",
    "backend:clean": "cd packages/backend && npm run clean",
    "backend:setup": "cd packages/backend && npm install && npm run build",
    "frontend:dev": "cd packages/frontend && npm run dev",
    "frontend:start": "cd packages/frontend && npm run start",
    "frontend:build": "cd packages/frontend && npm run build",
    "frontend:test": "cd packages/frontend && npm run test || echo 'No tests configured'",
    "frontend:lint": "cd packages/frontend && npm run lint || echo 'No lint configured'",
    "frontend:clean": "cd packages/frontend && npm run clean || echo 'No clean script'",
    "frontend:setup": "cd packages/frontend && npm install",
    "discord:dev": "cd packages/discord-bot && npm run dev",
    "discord:start": "cd packages/discord-bot && npm run start",
    "db:setup": "psql $DB_URL < scripts/devops/create-original-schema.sql",
    "docker:up": "docker-compose -f docker-compose.yml up -d",
    "docker:down": "docker-compose -f docker-compose.yml down",
    "docker:logs": "docker-compose -f docker-compose.yml logs -f"
  },
  "dependencies": {
    "concurrently": "^8.2.2"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "typescript": "^5.0.0",
    "tsx": "^4.0.0",
    "nodemon": "^3.0.0"
  }
}